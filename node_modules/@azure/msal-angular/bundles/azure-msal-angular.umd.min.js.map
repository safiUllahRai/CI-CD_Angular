{"version":3,"sources":["../../src/constants.ts","../../src/packageMetadata.ts","../../src/msal.service.ts","../../src/msal.broadcast.service.ts","../../src/msal.guard.ts","../../src/msal.interceptor.ts","../../src/msal.redirect.component.ts","../../src/msal.module.ts","../../node_modules/tslib/tslib.es6.js","../../src/msal.navigation.client.ts"],"names":["MSAL_INSTANCE","InjectionToken","MSAL_GUARD_CONFIG","MSAL_INTERCEPTOR_CONFIG","MSAL_BROADCAST_CONFIG","name","version","MsalService","instance","location","this","hash","path","split","pop","redirectHash","initializeWrapperLibrary","WrapperSKU","Angular","prototype","initialize","from","acquireTokenPopup","request","acquireTokenRedirect","acquireTokenSilent","silentRequest","handleRedirectObservable","handleRedirectPromise","loginPopup","loginRedirect","logout","logoutRequest","logoutRedirect","logoutPopup","ssoSilent","getLogger","logger","clone","setLogger","Injectable","Inject","args","Location","msalInstance","authService","msalBroadcastConfig","_this","eventsToReplay","verbose","_msalSubject","ReplaySubject","Subject","msalSubject$","asObservable","_inProgress","BehaviorSubject","InteractionStatus","Startup","inProgress$","addEventCallback","message","next","status","EventMessageUtils","getInteractionStatusFromEvent","value","eventType","Optional","type","MsalGuard","msalGuardConfig","msalBroadcastService","router","subscribe","parseUrl","url","getDestinationUrl","baseElements","document","getElementsByTagName","baseUrl","normalize","length","href","window","origin","pathUrl","prepareExternalUrl","startsWith","loginInteractively","state","authRequest","interactionType","InteractionType","Popup","pipe","map","response","setActiveAccount","account","redirectStartPage","Object","assign","activateHelper","Redirect","BrowserConfigurationAuthError","info","of","UrlString","hashContainsKnownProperties","BrowserUtils","isInIframe","getConfiguration","system","allowRedirectInIframe","warning","loginFailedRoute","currentPath","concatMap","getAllAccounts","urlContainsCode","includesCode","fragmentContainsCode","root","fragment","hashRouting","indexOf","catchError","error","errorPii","parseInt","VERSION","major","lastIndexOf","canActivate","route","canActivateChild","canLoad","MsalBroadcastService","Router","MsalInterceptor","msalInterceptorConfig","_document","intercept","req","scopes","getScopesForEndpoint","method","handle","getActiveAccount","infoPii","acquireToken","switchMap","result","headers","set","accessToken","requestClone","take","None","acquireTokenInteractively","filter","EMPTY","endpoint","httpMethod","normalizedEndpoint","protectedResourcesArray","Array","protectedResourceMap","keys","matchingProtectedResources","matchResourcesToEndpoint","absoluteResources","matchScopesToEndpoint","relativeResources","protectedResourcesEndpoints","matchingResources","forEach","key","normalizedKey","StringUtils","matchPattern","push","absoluteKey","getAbsoluteUrl","keyComponents","getUrlComponents","absoluteEndpoint","endpointComponents","relativeNormalizedKey","QueryString","AbsolutePath","HostNameAndPort","link","createElement","endpointArray","allMatchedScopes","matchedEndpoint","scopesForEndpoint","methodAndScopesArray","get","entry","normalizedRequestMethod","toLowerCase","scope","DOCUMENT","MsalRedirectComponent","ngOnInit","Component","selector","template","MsalModule","forRoot","guardConfig","interceptorConfig","ngModule","providers","provide","useValue","NgModule","declarations","imports","CommonModule","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","e","rejected","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","create","MsalCustomNavigationClient","_super_1","String","__","constructor","__extends","navigateInternal","options","trace","verbosePii","noHistory","_super","urlComponents","newUrl","navigateByUrl","replaceUrl","NavigationClient"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { InjectionToken } from \"@angular/core\";\r\n\r\nexport const MSAL_INSTANCE = new InjectionToken<string>(\"MSAL_INSTANCE\");\r\n\r\nexport const MSAL_GUARD_CONFIG = new InjectionToken<string>(\"MSAL_GUARD_CONFIG\");\r\n\r\nexport const MSAL_INTERCEPTOR_CONFIG = new InjectionToken<string>(\"MSAL_INTERCEPTOR_CONFIG\");\r\n\r\nexport const MSAL_BROADCAST_CONFIG = new InjectionToken<string>(\"MSAL_BROADCAST_CONFIG\");\r\n","/* eslint-disable header/header */\r\nexport const name = \"@azure/msal-angular\";\r\nexport const version = \"2.5.8\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Location } from \"@angular/common\";\r\nimport {\r\n    IPublicClientApplication,\r\n    EndSessionRequest,\r\n    EndSessionPopupRequest,\r\n    AuthenticationResult,\r\n    RedirectRequest,\r\n    SilentRequest,\r\n    PopupRequest,\r\n    SsoSilentRequest,\r\n    Logger,\r\n    WrapperSKU\r\n} from \"@azure/msal-browser\";\r\nimport { MSAL_INSTANCE } from \"./constants\";\r\nimport { Observable, from } from \"rxjs\";\r\nimport { IMsalService } from \"./IMsalService\";\r\nimport { name, version } from \"./packageMetadata\";\r\n\r\n@Injectable()\r\nexport class MsalService implements IMsalService {\r\n    private redirectHash: string;\r\n    private logger: Logger;\r\n\r\n    constructor(\r\n        @Inject(MSAL_INSTANCE) public instance: IPublicClientApplication,\r\n        private location: Location\r\n    ) {\r\n        const hash = this.location.path(true).split(\"#\").pop();\r\n        if (hash) {\r\n            this.redirectHash = `#${hash}`;\r\n        }\r\n        this.instance.initializeWrapperLibrary(WrapperSKU.Angular, version);\r\n    }\r\n\r\n    initialize(): Observable<void> {\r\n        return from(this.instance.initialize());\r\n    }\r\n    acquireTokenPopup(request: PopupRequest): Observable<AuthenticationResult> {\r\n        return from(this.instance.acquireTokenPopup(request));\r\n    }\r\n    acquireTokenRedirect(request: RedirectRequest): Observable<void> {\r\n        return from(this.instance.acquireTokenRedirect(request));\r\n    }\r\n    acquireTokenSilent(silentRequest: SilentRequest): Observable<AuthenticationResult> {\r\n        return from(this.instance.acquireTokenSilent(silentRequest));\r\n    }\r\n    handleRedirectObservable(hash?: string): Observable<AuthenticationResult> {\r\n        return from(this.instance.handleRedirectPromise(hash || this.redirectHash));\r\n    }\r\n    loginPopup(request?: PopupRequest): Observable<AuthenticationResult> {\r\n        return from(this.instance.loginPopup(request));\r\n    }\r\n    loginRedirect(request?: RedirectRequest): Observable<void> {\r\n        return from(this.instance.loginRedirect(request));\r\n    }\r\n    logout(logoutRequest?: EndSessionRequest): Observable<void> {\r\n        return from(this.instance.logout(logoutRequest));\r\n    }\r\n    logoutRedirect(logoutRequest?: EndSessionRequest): Observable<void> {\r\n        return from(this.instance.logoutRedirect(logoutRequest));\r\n    }\r\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Observable<void> {\r\n        return from(this.instance.logoutPopup(logoutRequest));\r\n    }\r\n    ssoSilent(request: SsoSilentRequest): Observable<AuthenticationResult> {\r\n        return from(this.instance.ssoSilent(request));\r\n    }\r\n    /**\r\n     * Gets logger for msal-angular.\r\n     * If no logger set, returns logger instance created with same options as msal-browser\r\n     */\r\n    getLogger(): Logger {\r\n        if (!this.logger) {\r\n            this.logger = this.instance.getLogger().clone(name, version);\r\n        }\r\n        return this.logger;\r\n    }\r\n    // Create a logger instance for msal-angular with the same options as msal-browser\r\n    setLogger(logger: Logger): void {\r\n        this.logger = logger.clone(name, version);\r\n        this.instance.setLogger(logger);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Inject, Injectable, Optional } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, ReplaySubject, Subject } from \"rxjs\";\r\nimport { MSAL_BROADCAST_CONFIG, MSAL_INSTANCE } from \"./constants\";\r\nimport { EventMessage, EventMessageUtils, IPublicClientApplication, InteractionStatus } from \"@azure/msal-browser\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { MsalBroadcastConfiguration } from \"./msal.broadcast.config\";\r\n\r\n@Injectable()\r\nexport class MsalBroadcastService {\r\n    private _msalSubject: Subject<EventMessage>;\r\n    public msalSubject$: Observable<EventMessage>;\r\n    private _inProgress: BehaviorSubject<InteractionStatus>;\r\n    public inProgress$: Observable<InteractionStatus>;\r\n\r\n    constructor(\r\n        @Inject(MSAL_INSTANCE) private msalInstance: IPublicClientApplication,\r\n        private authService: MsalService,\r\n        @Optional() @Inject(MSAL_BROADCAST_CONFIG) private msalBroadcastConfig?: MsalBroadcastConfiguration\r\n    ) {\r\n        // Make _msalSubject a ReplaySubject if configured to replay past events\r\n        if (this.msalBroadcastConfig && this.msalBroadcastConfig.eventsToReplay > 0) {\r\n            this.authService.getLogger().verbose(`BroadcastService - replayPastEvents set on BroadcastConfig, replaying the last ${this.msalBroadcastConfig.eventsToReplay} events`);\r\n            this._msalSubject = new ReplaySubject<EventMessage>(this.msalBroadcastConfig.eventsToReplay);\r\n        } else {\r\n            // Defaults to _msalSubject being a Subject\r\n            this._msalSubject = new Subject<EventMessage>();\r\n        }\r\n\r\n        this.msalSubject$  = this._msalSubject.asObservable();\r\n\r\n        // InProgress as BehaviorSubject so most recent inProgress state will be available upon subscription\r\n        this._inProgress = new BehaviorSubject<InteractionStatus>(InteractionStatus.Startup);\r\n        this.inProgress$ = this._inProgress.asObservable();\r\n\r\n        this.msalInstance.addEventCallback((message: EventMessage) => {\r\n            this._msalSubject.next(message);\r\n            const status = EventMessageUtils.getInteractionStatusFromEvent(message, this._inProgress.value);\r\n            if (status !== null) {\r\n                this.authService.getLogger().verbose(`BroadcastService - ${message.eventType} results in setting inProgress from ${this._inProgress.value} to ${status}`);\r\n                this._inProgress.next(status);\r\n            }\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, CanLoad, UrlTree, Router } from \"@angular/router\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { Injectable, Inject, VERSION } from \"@angular/core\";\r\nimport { Location } from \"@angular/common\";\r\nimport { InteractionType, BrowserConfigurationAuthError, BrowserUtils, UrlString, PopupRequest, RedirectRequest, AuthenticationResult } from \"@azure/msal-browser\";\r\nimport { MsalGuardConfiguration } from \"./msal.guard.config\";\r\nimport { MSAL_GUARD_CONFIG } from \"./constants\";\r\nimport { concatMap, catchError, map } from \"rxjs/operators\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { MsalBroadcastService } from \"./msal.broadcast.service\";\r\n\r\n@Injectable()\r\nexport class MsalGuard implements CanActivate, CanActivateChild, CanLoad {\r\n    private loginFailedRoute?: UrlTree;\r\n\r\n    constructor(\r\n        @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\r\n        private msalBroadcastService: MsalBroadcastService,\r\n        private authService: MsalService,\r\n        private location: Location,\r\n        private router: Router\r\n    ) { \r\n        // Subscribing so events in MsalGuard will set inProgress$ observable\r\n        this.msalBroadcastService.inProgress$.subscribe();\r\n    }\r\n\r\n    /**\r\n     * Parses url string to UrlTree\r\n     * @param url \r\n     */\r\n    parseUrl(url: string): UrlTree {\r\n        return this.router.parseUrl(url);\r\n    }\r\n\r\n    /**\r\n     * Builds the absolute url for the destination page\r\n     * @param path Relative path of requested page\r\n     * @returns Full destination url\r\n     */\r\n    getDestinationUrl(path: string): string {\r\n        this.authService.getLogger().verbose(\"Guard - getting destination url\");\r\n        // Absolute base url for the application (default to origin if base element not present)\r\n        const baseElements = document.getElementsByTagName(\"base\");\r\n        const baseUrl = this.location.normalize(baseElements.length ? baseElements[0].href : window.location.origin);\r\n\r\n        // Path of page (including hash, if using hash routing)\r\n        const pathUrl = this.location.prepareExternalUrl(path);\r\n\r\n        // Hash location strategy\r\n        if (pathUrl.startsWith(\"#\")) {\r\n            this.authService.getLogger().verbose(\"Guard - destination by hash routing\");\r\n            return `${baseUrl}/${pathUrl}`;\r\n        }\r\n\r\n        /*\r\n         * If using path location strategy, pathUrl will include the relative portion of the base path (e.g. /base/page).\r\n         * Since baseUrl also includes /base, can just concatentate baseUrl + path\r\n         */\r\n        return `${baseUrl}${path}`;\r\n    }\r\n\r\n    /**\r\n     * Interactively prompt the user to login\r\n     * @param url Path of the requested page\r\n     */\r\n    private loginInteractively(state: RouterStateSnapshot): Observable<boolean> {\r\n        const authRequest = typeof this.msalGuardConfig.authRequest === \"function\"\r\n            ? this.msalGuardConfig.authRequest(this.authService, state)\r\n            : { ...this.msalGuardConfig.authRequest };\r\n        if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\r\n            this.authService.getLogger().verbose(\"Guard - logging in by popup\");\r\n            return this.authService.loginPopup(authRequest as PopupRequest)\r\n                .pipe(\r\n                    map((response: AuthenticationResult) => {\r\n                        this.authService.getLogger().verbose(\"Guard - login by popup successful, can activate, setting active account\");\r\n                        this.authService.instance.setActiveAccount(response.account);\r\n                        return true;\r\n                    })\r\n                );\r\n        }\r\n\r\n        this.authService.getLogger().verbose(\"Guard - logging in by redirect\");\r\n        const redirectStartPage = this.getDestinationUrl(state.url);\r\n        return this.authService.loginRedirect({\r\n            redirectStartPage,\r\n            ...authRequest\r\n        } as RedirectRequest)\r\n            .pipe(\r\n                map(() => false)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Helper which checks for the correct interaction type, prevents page with Guard to be set as reidrect, and calls handleRedirectObservable\r\n     * @param state \r\n     */\r\n    private activateHelper(state?: RouterStateSnapshot): Observable<boolean|UrlTree> {\r\n        if (this.msalGuardConfig.interactionType !== InteractionType.Popup && this.msalGuardConfig.interactionType !== InteractionType.Redirect) {\r\n            throw new BrowserConfigurationAuthError(\"invalid_interaction_type\", \"Invalid interaction type provided to MSAL Guard. InteractionType.Popup or InteractionType.Redirect must be provided in the MsalGuardConfiguration\");\r\n        }\r\n        this.authService.getLogger().verbose(\"MSAL Guard activated\");\r\n\r\n        /*\r\n         * If a page with MSAL Guard is set as the redirect for acquireTokenSilent,\r\n         * short-circuit to prevent redirecting or popups.\r\n         */\r\n        if (typeof window !== \"undefined\") {\r\n            if (UrlString.hashContainsKnownProperties(window.location.hash) && BrowserUtils.isInIframe() && !this.authService.instance.getConfiguration().system.allowRedirectInIframe) {\r\n                this.authService.getLogger().warning(\"Guard - redirectUri set to page with MSAL Guard. It is recommended to not set redirectUri to a page that requires authentication.\");\r\n                return of(false);\r\n            }\r\n        } else {\r\n            this.authService.getLogger().info(\"Guard - window is undefined, MSAL does not support server-side token acquisition\");\r\n            return of(true);\r\n        }\r\n\r\n        /**\r\n         * If a loginFailedRoute is set in the config, set this as the loginFailedRoute\r\n         */\r\n        if (this.msalGuardConfig.loginFailedRoute) {\r\n            this.loginFailedRoute = this.parseUrl(this.msalGuardConfig.loginFailedRoute);\r\n        }\r\n\r\n        // Capture current path before it gets changed by handleRedirectObservable\r\n        const currentPath = this.location.path(true);\r\n\r\n        return this.authService.handleRedirectObservable()\r\n            .pipe(\r\n                concatMap(() => {\r\n                    if (!this.authService.instance.getAllAccounts().length) {\r\n                        if (state) {\r\n                            this.authService.getLogger().verbose(\"Guard - no accounts retrieved, log in required to activate\");\r\n                            return this.loginInteractively(state);\r\n                        } \r\n                        this.authService.getLogger().verbose(\"Guard - no accounts retrieved, no state, cannot load\");\r\n                        return of(false);\r\n                    }\r\n\r\n                    this.authService.getLogger().verbose(\"Guard - at least 1 account exists, can activate or load\");\r\n\r\n                    // Prevent navigating the app to /#code= or /code=\r\n                    if (state) {\r\n                        /*\r\n                         * Path routing:\r\n                         * state.url: /#code=...\r\n                         * state.root.fragment: code=...\r\n                         */\r\n\r\n                        /*\r\n                         * Hash routing:\r\n                         * state.url: /code\r\n                         * state.root.fragment: null\r\n                         */\r\n                        const urlContainsCode: boolean = this.includesCode(state.url);\r\n                        const fragmentContainsCode: boolean = !!state.root && !!state.root.fragment && this.includesCode(`#${state.root.fragment}`);\r\n                        const hashRouting: boolean = this.location.prepareExternalUrl(state.url).indexOf(\"#\") === 0;\r\n\r\n                        // Ensure code parameter is in fragment (and not in query parameter), or that hash hash routing is used\r\n                        if (urlContainsCode && (fragmentContainsCode || hashRouting)) {\r\n                            this.authService.getLogger().info(\"Guard - Hash contains known code response, stopping navigation.\");\r\n                            \r\n                            // Path routing (navigate to current path without hash)\r\n                            if (currentPath.indexOf(\"#\") > -1) {\r\n                                return of(this.parseUrl(this.location.path()));\r\n                            }\r\n                            \r\n                            // Hash routing (navigate to root path)\r\n                            return of(this.parseUrl(\"\"));\r\n                        }\r\n                    }\r\n\r\n                    return of(true);\r\n\r\n                }),\r\n                catchError((error: Error) => {\r\n                    this.authService.getLogger().error(\"Guard - error while logging in, unable to activate\");\r\n                    this.authService.getLogger().errorPii(`Guard - error: ${error.message}`);\r\n                    /**\r\n                     * If a loginFailedRoute is set, checks to see if Angular 10+ is used and state is passed in before returning route\r\n                     * Apps using Angular 9 will receive of(false) in canLoad interface, as it does not support UrlTree return types\r\n                     */\r\n                    if (this.loginFailedRoute && parseInt(VERSION.major, 10) > 9 && state) {\r\n                        this.authService.getLogger().verbose(\"Guard - loginFailedRoute set, redirecting\");\r\n                        return of(this.loginFailedRoute);\r\n                    }\r\n                    return of(false);\r\n                })\r\n            );\r\n    }\r\n\r\n    includesCode(path: string): boolean {\r\n        return (path.lastIndexOf(\"/code\") > -1 &&\r\n            path.lastIndexOf(\"/code\") === path.length - \"/code\".length) || // path.endsWith(\"/code\")\r\n            path.indexOf(\"#code=\") > -1 || \r\n            path.indexOf(\"&code=\") > -1;\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean|UrlTree> {\r\n        this.authService.getLogger().verbose(\"Guard - canActivate\");\r\n        return this.activateHelper(state);\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean|UrlTree> {\r\n        this.authService.getLogger().verbose(\"Guard - canActivateChild\");\r\n        return this.activateHelper(state);\r\n    }\r\n\r\n    canLoad(): Observable<boolean> {\r\n        this.authService.getLogger().verbose(\"Guard - canLoad\");\r\n        // @ts-ignore\r\n        return this.activateHelper();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor\r\n} from \"@angular/common/http\";\r\nimport { Location, DOCUMENT } from \"@angular/common\";\r\nimport { Observable, EMPTY, of } from \"rxjs\";\r\nimport { switchMap, catchError, take, filter } from \"rxjs/operators\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { AccountInfo, AuthenticationResult, BrowserConfigurationAuthError, InteractionStatus, InteractionType, StringUtils, UrlString } from \"@azure/msal-browser\";\r\nimport { Injectable, Inject } from \"@angular/core\";\r\nimport { MSAL_INTERCEPTOR_CONFIG } from \"./constants\";\r\nimport { MsalInterceptorAuthRequest, MsalInterceptorConfiguration, ProtectedResourceScopes, MatchingResources } from \"./msal.interceptor.config\";\r\nimport { MsalBroadcastService } from \"./msal.broadcast.service\";\r\n\r\n@Injectable()\r\nexport class MsalInterceptor implements HttpInterceptor {\r\n    private _document?: Document;\r\n\r\n    constructor(\r\n        @Inject(MSAL_INTERCEPTOR_CONFIG) private msalInterceptorConfig: MsalInterceptorConfiguration,\r\n        private authService: MsalService,\r\n        private location: Location,\r\n        private msalBroadcastService: MsalBroadcastService,\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\r\n        @Inject(DOCUMENT) document?: any\r\n    ) {\r\n        this._document = document as Document;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.msalInterceptorConfig.interactionType !== InteractionType.Popup && this.msalInterceptorConfig.interactionType !== InteractionType.Redirect) {\r\n            throw new BrowserConfigurationAuthError(\"invalid_interaction_type\", \"Invalid interaction type provided to MSAL Interceptor. InteractionType.Popup, InteractionType.Redirect must be provided in the msalInterceptorConfiguration\");\r\n        }\r\n\r\n        this.authService.getLogger().verbose(\"MSAL Interceptor activated\");\r\n        const scopes = this.getScopesForEndpoint(req.url, req.method);\r\n\r\n        // If no scopes for endpoint, does not acquire token\r\n        if (!scopes || scopes.length === 0) {\r\n            this.authService.getLogger().verbose(\"Interceptor - no scopes for endpoint\");\r\n            return next.handle(req);\r\n        }\r\n\r\n        // Sets account as active account or first account\r\n        let account: AccountInfo;\r\n        if (!!this.authService.instance.getActiveAccount()) {\r\n            this.authService.getLogger().verbose(\"Interceptor - active account selected\");\r\n            account = this.authService.instance.getActiveAccount();\r\n        } else {\r\n            this.authService.getLogger().verbose(\"Interceptor - no active account, fallback to first account\");\r\n            account = this.authService.instance.getAllAccounts()[0];\r\n        }\r\n\r\n        const authRequest = typeof this.msalInterceptorConfig.authRequest === \"function\"\r\n            ? this.msalInterceptorConfig.authRequest(this.authService, req, { account: account })\r\n            : { ...this.msalInterceptorConfig.authRequest, account };\r\n\r\n        this.authService.getLogger().info(`Interceptor - ${scopes.length} scopes found for endpoint`);\r\n        this.authService.getLogger().infoPii(`Interceptor - [${scopes}] scopes found for ${req.url}`);\r\n\r\n        return this.acquireToken(authRequest, scopes, account)\r\n            .pipe(\r\n                switchMap((result: AuthenticationResult) => {\r\n                    this.authService.getLogger().verbose(\"Interceptor - setting authorization headers\");\r\n                    const headers = req.headers\r\n                        .set(\"Authorization\", `Bearer ${result.accessToken}`);\r\n\r\n                    const requestClone = req.clone({headers});\r\n                    return next.handle(requestClone);\r\n                })\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Try to acquire token silently. Invoke interaction if acquireTokenSilent rejected with error or resolved with null access token\r\n     * @param authRequest Request\r\n     * @param scopes Array of scopes for the request\r\n     * @param account Account\r\n     * @returns Authentication result\r\n     */\r\n    private acquireToken(authRequest: MsalInterceptorAuthRequest, scopes: string[], account: AccountInfo): Observable<AuthenticationResult> {\r\n        // Note: For MSA accounts, include openid scope when calling acquireTokenSilent to return idToken\r\n        return this.authService.acquireTokenSilent({...authRequest, scopes, account })\r\n            .pipe(\r\n                catchError(() => {\r\n                    this.authService.getLogger().error(\"Interceptor - acquireTokenSilent rejected with error. Invoking interaction to resolve.\");\r\n                    return this.msalBroadcastService.inProgress$\r\n                        .pipe(\r\n                            take(1),\r\n                            switchMap((status: InteractionStatus) => {\r\n                                if (status === InteractionStatus.None) {\r\n                                    return this.acquireTokenInteractively(authRequest, scopes);\r\n                                }\r\n\r\n                                return this.msalBroadcastService.inProgress$\r\n                                    .pipe(\r\n                                        filter((status: InteractionStatus) => status === InteractionStatus.None),\r\n                                        take(1),\r\n                                        switchMap(() => this.acquireToken(authRequest, scopes, account))\r\n                                    );\r\n                            })\r\n                        );\r\n                }),\r\n                switchMap((result: AuthenticationResult)  => {\r\n                    if (!result.accessToken) {\r\n                        this.authService.getLogger().error(\"Interceptor - acquireTokenSilent resolved with null access token. Known issue with B2C tenants, invoking interaction to resolve.\");\r\n                        return this.msalBroadcastService.inProgress$\r\n                            .pipe(\r\n                                filter((status: InteractionStatus) => status === InteractionStatus.None),\r\n                                take(1),\r\n                                switchMap(() => this.acquireTokenInteractively(authRequest, scopes))\r\n                            );\r\n                    }\r\n                    return of(result);\r\n                })\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Invoke interaction for the given set of scopes\r\n     * @param authRequest Request\r\n     * @param scopes Array of scopes for the request\r\n     * @returns Result from the interactive request\r\n     */\r\n    private acquireTokenInteractively(authRequest: MsalInterceptorAuthRequest, scopes: string[]): Observable<AuthenticationResult> {\r\n        if (this.msalInterceptorConfig.interactionType === InteractionType.Popup) {\r\n            this.authService.getLogger().verbose(\"Interceptor - error acquiring token silently, acquiring by popup\");\r\n            return this.authService.acquireTokenPopup({ ...authRequest, scopes });\r\n        }\r\n        this.authService.getLogger().verbose(\"Interceptor - error acquiring token silently, acquiring by redirect\");\r\n        const redirectStartPage = window.location.href;\r\n        this.authService.acquireTokenRedirect({...authRequest, scopes, redirectStartPage });\r\n        return EMPTY;\r\n    }\r\n\r\n    /**\r\n     * Looks up the scopes for the given endpoint from the protectedResourceMap\r\n     * @param endpoint Url of the request\r\n     * @param httpMethod Http method of the request\r\n     * @returns Array of scopes, or null if not found\r\n     *\r\n     */\r\n    private getScopesForEndpoint(endpoint: string, httpMethod: string): Array<string>|null {\r\n        this.authService.getLogger().verbose(\"Interceptor - getting scopes for endpoint\");\r\n\r\n        // Ensures endpoints and protected resources compared are normalized\r\n        const normalizedEndpoint = this.location.normalize(endpoint);\r\n\r\n        const protectedResourcesArray = Array.from(this.msalInterceptorConfig.protectedResourceMap.keys());\r\n\r\n        const matchingProtectedResources = this.matchResourcesToEndpoint(protectedResourcesArray, normalizedEndpoint);\r\n\r\n        // Check absolute urls of resources first before checking relative to prevent incorrect matching where multiple resources have similar relative urls\r\n        if (matchingProtectedResources.absoluteResources.length > 0) {\r\n            return this.matchScopesToEndpoint(this.msalInterceptorConfig.protectedResourceMap, matchingProtectedResources.absoluteResources, httpMethod);\r\n        } else if (matchingProtectedResources.relativeResources.length > 0){\r\n            return this.matchScopesToEndpoint(this.msalInterceptorConfig.protectedResourceMap, matchingProtectedResources.relativeResources, httpMethod);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Finds resource endpoints that match request endpoint\r\n     * @param protectedResourcesEndpoints\r\n     * @param endpoint\r\n     * @returns\r\n     */\r\n    private matchResourcesToEndpoint(protectedResourcesEndpoints: string[], endpoint: string): MatchingResources {\r\n        const matchingResources: MatchingResources = {absoluteResources: [], relativeResources: []};\r\n\r\n        protectedResourcesEndpoints.forEach(key => {\r\n            // Normalizes and adds resource to matchingResources.absoluteResources if key matches endpoint. StringUtils.matchPattern accounts for wildcards\r\n            const normalizedKey = this.location.normalize(key);\r\n            if (StringUtils.matchPattern(normalizedKey, endpoint)){\r\n                matchingResources.absoluteResources.push(key);\r\n            }\r\n\r\n            // Get url components for relative urls\r\n            const absoluteKey = this.getAbsoluteUrl(key);\r\n            const keyComponents = new UrlString(absoluteKey).getUrlComponents();\r\n            const absoluteEndpoint = this.getAbsoluteUrl(endpoint);\r\n            const endpointComponents = new UrlString(absoluteEndpoint).getUrlComponents();\r\n\r\n            // Normalized key should include query strings if applicable\r\n            const relativeNormalizedKey = keyComponents.QueryString ? `${keyComponents.AbsolutePath}?${keyComponents.QueryString}` : this.location.normalize(keyComponents.AbsolutePath);\r\n\r\n            // Add resource to matchingResources.relativeResources if same origin, relativeKey matches endpoint, and is not empty\r\n            if (keyComponents.HostNameAndPort === endpointComponents.HostNameAndPort && StringUtils.matchPattern(relativeNormalizedKey, absoluteEndpoint) && relativeNormalizedKey !== \"\" && relativeNormalizedKey !== \"/*\"){\r\n                matchingResources.relativeResources.push(key);\r\n            }\r\n        });\r\n\r\n        return matchingResources;\r\n    }\r\n\r\n    /**\r\n     * Transforms relative urls to absolute urls\r\n     * @param url\r\n     * @returns\r\n     */\r\n    private getAbsoluteUrl(url: string): string {\r\n        const link = this._document.createElement(\"a\");\r\n        link.href = url;\r\n        return link.href;\r\n    }\r\n\r\n    /**\r\n     * Finds scopes from first matching endpoint with HTTP method that matches request\r\n     * @param protectedResourceMap Protected resource map\r\n     * @param endpointArray Array of resources that match request endpoint\r\n     * @param httpMethod Http method of the request\r\n     * @returns\r\n     */\r\n    private matchScopesToEndpoint(protectedResourceMap: Map<string, Array<string|ProtectedResourceScopes> | null>, endpointArray: string[], httpMethod: string): Array<string>|null {\r\n        const allMatchedScopes = [];\r\n\r\n        // Check each matched endpoint for matching HttpMethod and scopes\r\n        endpointArray.forEach(matchedEndpoint => {\r\n            const scopesForEndpoint = [];\r\n            const methodAndScopesArray = protectedResourceMap.get(matchedEndpoint);\r\n\r\n            // Return if resource is unprotected\r\n            if (methodAndScopesArray === null) {\r\n                allMatchedScopes.push(null);\r\n                return;\r\n            }\r\n\r\n            methodAndScopesArray.forEach(entry => {\r\n                // Entry is either array of scopes or ProtectedResourceScopes object\r\n                if (typeof entry === \"string\") {\r\n                    scopesForEndpoint.push(entry);\r\n                } else {\r\n                    // Ensure methods being compared are normalized\r\n                    const normalizedRequestMethod = httpMethod.toLowerCase();\r\n                    const normalizedResourceMethod = entry.httpMethod.toLowerCase();\r\n                    // Method in protectedResourceMap matches request http method\r\n                    if (normalizedResourceMethod === normalizedRequestMethod) {\r\n                        // Validate if scopes comes null to unprotect the resource in a certain http method\r\n                        if (entry.scopes === null) {\r\n                            allMatchedScopes.push(null);\r\n                        } else {\r\n                            entry.scopes.forEach((scope) => {\r\n                                scopesForEndpoint.push(scope);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Only add to all scopes if scopes for endpoint and method is found\r\n            if (scopesForEndpoint.length > 0) {\r\n                allMatchedScopes.push(scopesForEndpoint);\r\n            }\r\n        });\r\n\r\n        if (allMatchedScopes.length > 0) {\r\n            if (allMatchedScopes.length > 1) {\r\n                this.authService.getLogger().warning(\"Interceptor - More than 1 matching scopes for endpoint found.\");\r\n            }\r\n            // Returns scopes for first matching endpoint\r\n            return allMatchedScopes[0];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * This is a dedicated redirect component to be added to Angular apps to \r\n * handle redirects when using @azure/msal-angular.\r\n * Import this component to use redirects in your app.\r\n */\r\n\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { concatMap } from \"rxjs/operators\";\r\nimport { MsalService } from \"./msal.service\";\r\n\r\n@Component({\r\n    selector: \"app-redirect\",\r\n    template: \"\"\r\n})\r\nexport class MsalRedirectComponent implements OnInit {\r\n\r\n    constructor(private authService: MsalService) { }\r\n\r\n    ngOnInit(): void {    \r\n        this.authService.getLogger().verbose(\"MsalRedirectComponent activated\");\r\n        this.authService.initialize().pipe(\r\n            concatMap(() => {\r\n                return this.authService.handleRedirectObservable();\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { IPublicClientApplication } from \"@azure/msal-browser\";\r\nimport { MsalGuardConfiguration } from \"./msal.guard.config\";\r\nimport { MsalInterceptorConfiguration } from \"./msal.interceptor.config\";\r\nimport { MsalGuard } from \"./msal.guard\";\r\nimport { MsalBroadcastService } from \"./msal.broadcast.service\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { MSAL_INSTANCE , MSAL_GUARD_CONFIG, MSAL_INTERCEPTOR_CONFIG } from \"./constants\";\r\nimport { MsalRedirectComponent } from \"./msal.redirect.component\";\r\n\r\n@NgModule({\r\n    declarations: [MsalRedirectComponent],\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    providers: [\r\n        MsalGuard,\r\n        MsalBroadcastService\r\n    ]\r\n})\r\nexport class MsalModule {\r\n    static forRoot(\r\n        msalInstance: IPublicClientApplication,\r\n        guardConfig: MsalGuardConfiguration,\r\n        interceptorConfig: MsalInterceptorConfiguration\r\n    ): ModuleWithProviders<MsalModule> {\r\n        return {\r\n            ngModule: MsalModule,\r\n            providers: [\r\n                {\r\n                    provide: MSAL_INSTANCE,\r\n                    useValue: msalInstance\r\n                },\r\n                {\r\n                    provide: MSAL_GUARD_CONFIG,\r\n                    useValue: guardConfig\r\n                },\r\n                {\r\n                    provide: MSAL_INTERCEPTOR_CONFIG,\r\n                    useValue: interceptorConfig\r\n                },\r\n                MsalService\r\n            ]\r\n        };\r\n    }\r\n\r\n}\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { NavigationClient, NavigationOptions, UrlString } from \"@azure/msal-browser\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n/**\r\n * Custom navigation used for Angular client-side navigation.\r\n * See performance doc for details:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-angular/docs/v2-docs/performance.md\r\n */\r\n@Injectable()\r\nexport class MsalCustomNavigationClient extends NavigationClient {\r\n\r\n    constructor(\r\n        private authService: MsalService,\r\n        private router: Router, \r\n        private location: Location\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    async navigateInternal(url:string, options: NavigationOptions): Promise<boolean> {\r\n        this.authService.getLogger().trace(\"MsalCustomNavigationClient called\");\r\n        \r\n        this.authService.getLogger().verbose(\"MsalCustomNavigationClient - navigating\");\r\n        this.authService.getLogger().verbosePii(`MsalCustomNavigationClient - navigating to url: ${url}`);\r\n        \r\n        // Prevent hash clearing from causing an issue with Client-side navigation after redirect is handled\r\n        if (options.noHistory) {\r\n            return super.navigateInternal(url, options);\r\n        } else {\r\n            // Normalizing newUrl if no query string\r\n            const urlComponents = new UrlString(url).getUrlComponents();\r\n            const newUrl = urlComponents.QueryString ? `${urlComponents.AbsolutePath}?${urlComponents.QueryString}` : this.location.normalize(urlComponents.AbsolutePath);\r\n            this.router.navigateByUrl(newUrl, { replaceUrl: options.noHistory });\r\n        }\r\n        return Promise.resolve(options.noHistory);\r\n    }\r\n}\r\n"]}